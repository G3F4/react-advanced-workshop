{"version":3,"sources":["components/common/price/Price.jsx","components/common/rating/Rating.jsx","components/common/share/Share.jsx","components/views/accommodation-list/filters/Filters.jsx","components/views/accommodation-list/list/List.jsx","components/views/accommodation-list/AccommodationList.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","Price","React","memo","classes","price","a","createElement","className","variant","gutterBottom","concat","amount","currency","breakfast","propTypes","PropTypes","object","withStyles","theme","marginTop","spacing","unit","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_colors_blue_js__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_colors_blue_js__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","styles","avatar","backgroundColor","blue","Rating","rating","average","reviews","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_DialogActions__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_Share__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_Share__WEBPACK_IMPORTED_MODULE_9___default","Share","id","open","onClose","onOpen","aria-label","onClick","aria-labelledby","window","location","origin","color","autoFocus","API_HOST","textField","marginLeft","marginRight","button","margin","suggestionsContainer","position","suggestionsContainerOpen","zIndex","appBar","left","right","suggestion","display","suggestionsList","padding","listStyleType","PureComponent","[object Object]","args","super","this","state","suggestions","handleSuggestionsFetchRequested","value","fetch","then","response","json","setState","handleSuggestionsClearRequested","getSuggestionValue","label","renderSuggestion","query","isHighlighted","matches","match","parts","parse","react_default","MenuItem_default","selected","component","map","part","index","highlight","key","String","style","fontWeight","text","renderInputComponent","inputProps","_inputProps$inputRef","inputRef","ref","other","Object","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","input","render","_this$props","props","filters","onSearch","onSearchChange","onFiltersCentreChange","onFiltersPriceChange","onFiltersMinAvgRatingChange","onFiltersMinReviewsCountChange","Grid_default","item","xs","toolbar","Typography_default","FormGroup_default","dist_default","onSuggestionsFetchRequested","onSuggestionsClearRequested","placeholder","searchPhrase","onChange","container","renderSuggestionsContainer","options","Paper_default","containerProps","square","children","Button_default","centre","type","step","min","minPrice","minAvgRating","minReviewsCount","card","maxWidth","sortingTabs","flexGrow","media","height","paddingTop","actions","floatRight","accommodations","shareId","sorting","onDetails","onSortingChange","onShareDialogClose","onShareDialogOpen","errors","Fragment","fetching","CircularProgress_default","size","thickness","data","length","Tabs_default","indicatorColor","textColor","centered","Tab_default","idx","Card_default","CardHeader_default","action","title","subheader","address","CardMedia_default","image","cover","url","CardContent_default","insights","CardActions_default","disableActionSpacing","SORTING","withRouter","fetchList","_this$state","localStorage","setItem","JSON","stringify","list","message","handleSortingChange","event","handleShareDialogOpen","handleShareDialogClose","handleFiltersChange","handleSearchChange","newValue","objectSpread","target","handleFiltersCentreChange","handleFiltersPriceChange","handleFiltersMinAvgRatingChange","handleFiltersMinReviewsCountChange","handleDetails","detailsId","history","push","componentDidMount","getItem","indexOf","_this$state2","index_es","filters_Filters","list_List"],"mappings":"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","file":"static/js/7.0da27d49.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n  price: {\n    marginTop: theme.spacing.unit,\n  },\n});\n\nconst Price = React.memo(({ classes, price }) => (\n  <div className={classes.price}>\n    <Typography variant=\"h6\" gutterBottom>\n      Price\n    </Typography>\n    <Typography variant=\"button\" gutterBottom>\n      {`${price.amount} ${price.currency}`}\n    </Typography>\n    <Typography variant=\"overline\" gutterBottom>\n      {price.breakfast ? (\n        <span>Breakfast included</span>\n      ) : (\n        <span>Breakfast not included</span>\n      )}\n    </Typography>\n  </div>\n));\n\nPrice.propTypes = {\n  classes: PropTypes.object,\n  price: PropTypes.object,\n};\n\nexport default withStyles(styles)(Price);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport blue from '@material-ui/core/colors/blue.js';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = {\n  avatar: {\n    backgroundColor: blue[600],\n  },\n};\n\nconst Rating = React.memo(({ classes, rating }) => (\n  <div>\n    <Typography variant=\"h6\" gutterBottom>\n      Good\n    </Typography>\n    <Avatar className={classes.avatar}>\n      {rating.average}\n    </Avatar>\n    <Typography variant=\"overline\" gutterBottom>\n      {`${rating.reviews} reviews`}\n    </Typography>\n  </div>\n));\n\nRating.propTypes = {\n  classes: PropTypes.object,\n  rating: PropTypes.object,\n};\n\nexport default withStyles(styles)(Rating);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\n\nconst Share = React.memo(({ id, open, onClose, onOpen }) => (\n  <div>\n    <IconButton aria-label=\"Share\" onClick={() => onOpen(id)}>\n      <ShareIcon />\n    </IconButton>\n    <Dialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogTitle id=\"responsive-dialog-title\">{\"Copy this link and share!\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {`${window.location.origin}/details?id=${id}`}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n));\n\nShare.propTypes = {\n  classes: PropTypes.object,\n  rating: PropTypes.object,\n};\n\nexport default Share;\n","import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst API_HOST = 'https://warsawjs-workshop-32-book-it-m.herokuapp.com';\n\nconst styles = theme => ({\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  suggestionsContainer: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: theme.zIndex.appBar,\n    marginTop: theme.spacing.unit * -1,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n});\n\nclass Filters extends React.PureComponent {\n  static propTypes = {\n    classes: PropTypes.object,\n    filters: PropTypes.object.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchChange: PropTypes.func.isRequired,\n    onFiltersCentreChange: PropTypes.func.isRequired,\n    onFiltersPriceChange: PropTypes.func.isRequired,\n    onFiltersMinAvgRatingChange: PropTypes.func.isRequired,\n    onFiltersMinReviewsCountChange: PropTypes.func.isRequired,\n  };\n\n  state = {\n    suggestions: [],\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    fetch(`${API_HOST}/suggestions?search=${value}`).then(response => {\n      response.json().then(({ suggestions }) => {\n        this.setState({ suggestions });\n      });\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  getSuggestionValue(suggestion) {\n    return suggestion.label;\n  }\n\n  renderSuggestion(suggestion, { query, isHighlighted }) {\n    const matches = match(suggestion.label, query);\n    const parts = parse(suggestion.label, matches);\n\n    return (\n      <MenuItem selected={isHighlighted} component=\"div\">\n        <div>\n          {parts.map((part, index) =>\n            part.highlight ? (\n              <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n            ) : (\n              <strong key={String(index)} style={{ fontWeight: 300 }}>\n                {part.text}\n              </strong>\n            ),\n          )}\n        </div>\n      </MenuItem>\n    );\n  }\n\n  renderInputComponent(inputProps) {\n    const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n    return (\n      <TextField\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputProps={{\n          inputRef: node => {\n            ref(node);\n            inputRef(node);\n          },\n          classes: {\n            input: classes.input,\n          },\n        }}\n        {...other}\n      />\n    );\n  }\n\n  render() {\n    const {\n      classes,\n      filters,\n      onSearch,\n      onSearchChange,\n      onFiltersCentreChange,\n      onFiltersPriceChange,\n      onFiltersMinAvgRatingChange,\n      onFiltersMinReviewsCountChange,\n    } = this.props;\n\n    return (\n      <Grid item xs={3}>\n        <div className={classes.toolbar}>\n          <Typography variant=\"h6\">Search</Typography>\n          <FormGroup>\n            <Autosuggest\n              renderSuggestion={this.renderSuggestion}\n              getSuggestionValue={this.getSuggestionValue}\n              renderInputComponent={this.renderInputComponent}\n              suggestions={this.state.suggestions}\n              onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n              inputProps={{\n                classes,\n                placeholder: 'Destination',\n                value: filters.searchPhrase,\n                onChange: onSearchChange,\n              }}\n              theme={{\n                container: classes.suggestionsContainer,\n                suggestionsContainerOpen: classes.suggestionsContainerOpen,\n                suggestionsList: classes.suggestionsList,\n                suggestion: classes.suggestion,\n              }}\n              renderSuggestionsContainer={options => (\n                <Paper {...options.containerProps} square>\n                  {options.children}\n                </Paper>\n              )}\n            />\n            <Button onClick={onSearch} variant=\"outlined\" color=\"primary\" className={classes.button}>\n              Search\n            </Button>\n            <TextField\n              id=\"centre\"\n              label=\"Max. centre distance\"\n              className={classes.textField}\n              value={filters.centre}\n              onChange={onFiltersCentreChange}\n              margin=\"normal\"\n              variant=\"outlined\"\n              type=\"number\"\n              inputProps={{\n                step: 1,\n                min: 0,\n              }}\n            />\n            <TextField\n              id=\"minPrice\"\n              label=\"Min. price\"\n              className={classes.textField}\n              value={filters.minPrice}\n              onChange={onFiltersPriceChange}\n              margin=\"normal\"\n              variant=\"outlined\"\n              type=\"number\"\n              inputProps={{\n                step: 100,\n                min: 0,\n              }}\n            />\n            <TextField\n              id=\"minAvgRating\"\n              label=\"Min. average rating\"\n              className={classes.textField}\n              value={filters.minAvgRating}\n              onChange={onFiltersMinAvgRatingChange}\n              margin=\"normal\"\n              variant=\"outlined\"\n              type=\"number\"\n              inputProps={{\n                step: 1,\n                min: 0,\n              }}\n            />\n            <TextField\n              id=\"minReviewsCount\"\n              label=\"Min. reviews count\"\n              className={classes.textField}\n              value={filters.minReviewsCount}\n              onChange={onFiltersMinReviewsCountChange}\n              margin=\"normal\"\n              variant=\"outlined\"\n              type=\"number\"\n              inputProps={{\n                step: 10,\n                min: 0,\n              }}\n            />\n            <Button onClick={onSearch} variant=\"outlined\" color=\"primary\" className={classes.button}>\n              Search\n            </Button>\n          </FormGroup>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Filters);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport Price from '../../../common/price/Price';\nimport Rating from '../../../common/rating/Rating';\nimport Share from '../../../common/share/Share';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '100%',\n  },\n  sortingTabs: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: '30%',\n  },\n  actions: {\n    display: 'flex',\n  },\n  floatRight: {\n    marginLeft: 'auto',\n  },\n  accommodations: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nconst List = ({\n  classes,\n  accommodations,\n  shareId,\n  sorting,\n  onDetails,\n  onSortingChange,\n  onShareDialogClose,\n  onShareDialogOpen,\n}) => (\n  <Grid item xs={9}>\n    {accommodations.errors ? (\n      <Typography variant=\"body1\">{accommodations.errors}</Typography>\n    ) : (\n      <React.Fragment>\n        {accommodations.fetching ? (\n          <CircularProgress size=\"100%\" thickness={2}/>\n        ) : (\n          <React.Fragment>\n            {accommodations.data && accommodations.data.length === 0 && (\n              <Typography variant=\"h3\">No results found</Typography>\n            )}\n            {accommodations.data && accommodations.data.length > 0 && (\n              <div className={classes.accommodations}>\n                <Typography variant=\"h3\">{`${accommodations.data.length} results found`}</Typography>\n                <Paper className={classes.sortingTabs}>\n                  <Tabs\n                    value={sorting}\n                    onChange={onSortingChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                  >\n                    <Tab label=\"Best rated\"/>\n                    <Tab label=\"Most reviewed\"/>\n                    <Tab label=\"Cheapest\"/>\n                    <Tab label=\"Most expensive\"/>\n                  </Tabs>\n                </Paper>\n                {accommodations.data.map((item, idx) => (\n                  <Card className={classes.card} key={idx}>\n                    <CardHeader\n                      avatar={<Rating rating={item.rating}/>}\n                      action={<Price price={item.price}/>}\n                      title={item.title}\n                      subheader={item.location.centre + ' - ' + item.location.address}\n                    />\n                    <CardMedia\n                      className={classes.media}\n                      image={item.cover.url}\n                      title={item.title}\n                    />\n                    <CardContent>\n                      {item.insights.map((item, idx) => (\n                        <Typography key={idx} component=\"p\">{item.text}</Typography>\n                      ))}\n                    </CardContent>\n                    <CardActions className={classes.actions} disableActionSpacing>\n                      <Share\n                        id={item.id}\n                        open={shareId === item.id}\n                        onClose={onShareDialogClose}\n                        onOpen={onShareDialogOpen}\n                      />\n                      <Button\n                        aria-label=\"Details\"\n                        className={classes.floatRight}\n                        onClick={() => onDetails(item.id)}\n                      >\n                        Details\n                      </Button>\n                    </CardActions>\n                  </Card>\n                ))}\n              </div>\n            )}\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )}\n  </Grid>\n);\n\nList.propTypes = {\n  classes: PropTypes.object,\n  accommodations: PropTypes.object.isRequired,\n  shareId: PropTypes.string.isRequired,\n  sorting: PropTypes.number.isRequired,\n  onDetails: PropTypes.func.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n  onShareDialogClose: PropTypes.func.isRequired,\n  onShareDialogOpen: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(List);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport Filters from './filters/Filters';\nimport List from './list/List';\n\nconst API_HOST = 'https://warsawjs-workshop-32-book-it-m.herokuapp.com';\n\nconst SORTING = ['MAX_AVG_RATING', 'MAX_REVIEWS', 'MIN_PRICE', 'MAX_PRICE'];\n\nclass AccommodationList extends React.PureComponent {\n  static propTypes = {\n    history: PropTypes.object,\n  };\n\n  state = {\n    accommodations: {\n      data: null,\n      fetching: false,\n      errors: null,\n    },\n    sorting: 0,\n    filters: {\n      searchPhrase: '',\n      centre: '',\n      minPrice: '',\n      minAvgRating: '',\n      minReviewsCount: '',\n    },\n    shareId: '',\n  };\n\n  componentDidMount() {\n    const filters = JSON.parse(localStorage.getItem('filters')) || {};\n    const sorting = localStorage.getItem('sorting') || SORTING[0];\n\n    this.setState({\n      filters: {\n        centre: filters.centre || '',\n        minAvgRating: filters.minAvgRating || '',\n        minPrice: filters.minPrice || '',\n        minReviewsCount: filters.minReviewsCount || '',\n        searchPhrase: filters.searchPhrase ? filters.searchPhrase : '',\n      },\n      sorting: SORTING.indexOf(sorting) < 0 ? 0 : SORTING.indexOf(sorting),\n    }, this.fetchList);\n  }\n\n  fetchList = () => {\n    const { filters, sorting, accommodations } = this.state;\n    const { searchPhrase, centre, minPrice, minAvgRating, minReviewsCount } = filters;\n    const query = `?search=${searchPhrase}&centre=${centre}&minPrice=${minPrice}&minAvgRating=${minAvgRating}&minReviewsCount=${minReviewsCount}&sorting=${SORTING[sorting]}`;\n\n    localStorage.setItem('filters', JSON.stringify(filters));\n    localStorage.setItem('sorting', sorting);\n\n    this.setState({\n      accommodations: {\n        data: accommodations.data,\n        fetching: true,\n        errors: null,\n      },\n    });\n\n    fetch(`${API_HOST}/list${query}`).then(response => {\n      response.json().then(({ list }) => {\n        this.setState({\n          accommodations: {\n            data: list,\n            fetching: false,\n            errors: null,\n          },\n        });\n      }, errors => {\n        this.setState({\n          accommodations: {\n            data: null,\n            fetching: false,\n            errors: errors.message,\n          },\n        });\n      });\n    });\n  };\n\n  handleSortingChange = (event, sorting) => {\n    this.setState({ sorting }, this.fetchList);\n  };\n\n  handleShareDialogOpen = shareId => {\n    this.setState({ shareId });\n  };\n\n  handleShareDialogClose = () => {\n    this.setState({ shareId: '' });\n  };\n\n  handleFiltersChange = filters => {\n    this.setState({ filters });\n  };\n\n  handleSearchChange = (event, { newValue } = {}) => {\n    this.handleFiltersChange({\n      ...this.state.filters,\n      searchPhrase: newValue || event.target.value,\n    });\n  };\n\n  handleFiltersCentreChange = event => {\n    this.handleFiltersChange({\n      ...this.state.filters,\n      centre: event.target.value,\n    });\n  };\n\n  handleFiltersPriceChange = event => {\n    this.handleFiltersChange({\n      ...this.state.filters,\n      minPrice: event.target.value,\n    });\n  };\n\n  handleFiltersMinAvgRatingChange = event => {\n    this.handleFiltersChange({\n      ...this.state.filters,\n      minAvgRating: event.target.value,\n    });\n  };\n\n  handleFiltersMinReviewsCountChange = event => {\n    this.handleFiltersChange({\n      ...this.state.filters,\n      minReviewsCount: event.target.value,\n    });\n  };\n\n  handleDetails = detailsId => {\n    this.props.history.push(`/details?id=${detailsId}`);\n  };\n\n  render() {\n    const { shareId, filters, accommodations, sorting } = this.state;\n\n    return (\n      <Grid container>\n        <Filters\n          filters={filters}\n          onSearch={this.fetchList}\n          onSearchChange={this.handleSearchChange}\n          onFiltersCentreChange={this.handleFiltersCentreChange}\n          onFiltersPriceChange={this.handleFiltersPriceChange}\n          onFiltersMinAvgRatingChange={this.handleFiltersMinAvgRatingChange}\n          onFiltersMinReviewsCountChange={this.handleFiltersMinReviewsCountChange}\n        />\n        <List\n          accommodations={accommodations}\n          shareId={shareId}\n          sorting={sorting}\n          onDetails={this.handleDetails}\n          onSortingChange={this.handleSortingChange}\n          onShareDialogClose={this.handleShareDialogClose}\n          onShareDialogOpen={this.handleShareDialogOpen}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(AccommodationList);\n"],"sourceRoot":""}